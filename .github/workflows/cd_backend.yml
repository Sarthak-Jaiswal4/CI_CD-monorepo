name: Deploy the backend
on: 
  push:
      branch: [main]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/Dockerfile.backend
          push: true
          tags: sarthakjazz/todo-app-backend:${{ github.sha }}

      - name: Deploy to AWS Ubuntu Server
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/ssh_key
          chmod 700 ~/ssh_key
          
          # Stop existing container
          ssh -o StrictHostKeyChecking=no -i ~/ssh_key ubuntu@${{ secrets.WS_AWS_SERVER_IP }} "docker stop backend || true"
          
          # Remove existing container
          ssh -o StrictHostKeyChecking=no -i ~/ssh_key ubuntu@${{ secrets.WS_AWS_SERVER_IP }} "docker rm backend || true"
          
          # Pull latest image
          ssh -o StrictHostKeyChecking=no -i ~/ssh_key ubuntu@${{ secrets.WS_AWS_SERVER_IP }} "docker pull sarthakjazz/todo-app-backend:${{ github.sha }}"
          
          # Run new container
          ssh -o StrictHostKeyChecking=no -i ~/ssh_key ubuntu@${{ secrets.WS_AWS_SERVER_IP }} "docker run -d --name backend -p 3001:3001 sarthakjazz/todo-app-backend:${{ github.sha }}"
          
          # Clean up old images
          ssh -o StrictHostKeyChecking=no -i ~/ssh_key ubuntu@${{ secrets.WS_AWS_SERVER_IP }} "docker image prune -f"

    
