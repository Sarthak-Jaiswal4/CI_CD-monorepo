FROM node:20-alpine AS builder

RUN npm install -g pnpm

WORKDIR /app

# Pass DATABASE_URL to build stage
ARG DATABASE_URL
ENV DATABASE_URL=${DATABASE_URL}

# Copy workspace configuration files
COPY ./pnpm-workspace.yaml ./pnpm-workspace.yaml 
COPY ./packages ./packages
COPY ./pnpm-lock.yaml ./pnpm-lock.yaml
COPY ./package.json ./package.json
COPY ./turbo.json ./turbo.json

# Copy the web app
COPY ./apps/web ./apps/web

# Install dependencies
RUN pnpm install --frozen-lockfile

# Generate Prisma client
RUN pnpm run db:migrate

# Build the Next.js app with standalone output
RUN pnpm run build --filter=web


FROM node:20-alpine AS runner

WORKDIR /app

# Pass DATABASE_URL to runtime
ARG DATABASE_URL
ENV DATABASE_URL=${DATABASE_URL}

# Copy the standalone output from the build stage
COPY --from=builder /app/apps/web/.next/standalone ./
COPY --from=builder /app/apps/web/.next/static ./apps/web/.next/static
COPY --from=builder /app/apps/web/public ./apps/web/public

EXPOSE 3000

CMD ["node", "apps/web/server.js"]